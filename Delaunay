using System;
using System.IO;
using NetTopologySuite.Geometries;
using NetTopologySuite.Triangulate;
using NUnit.Framework;
using NetTopologySuite.IO;

namespace NetTopologySuite.Samples.Voronoi
{
    public class DelaunayExample
    {

        public string filepath = string.Empty;

        public StreamReader file = new StreamReader( @"D:\internship\PointCloudProcess\trianglation\NetTopologySuite-develop\NetTopologySuite-develop\TriangleData.txt");

        public StreamWriter fileWriter = new StreamWriter(@"D:\internship\PointCloudProcess\trianglation\TriangleResult2.txt");

        [Test]
        public void TestDelunayTrianle()
        {
            string line;
            int count = 0;

            var reader = new WKTReader();
     

            var PointCoords = new Point[588];

            var factory = new GeometryFactory();

            string[] co = new string[3]; 
            double[] coords = new double[3];

            while ((line = file.ReadLine()) != null)
            {
                co = line.Split(',');
                for (int i = 0; i < 3; i++)
                {
                    coords[i] = Convert.ToDouble(co[i]);
                }
                PointCoords[count] = new Point(coords[0], coords[1], coords[2]);
                

                count++;
            }

//            Console.Write(co.Length+" " + count);
          
        


            var delaunayTri = new DelaunayTriangulationBuilder();

            var Pointset = new MultiPoint(PointCoords, factory);   

            delaunayTri.SetSites(Pointset);

            var resultingTriangle = delaunayTri.GetTriangles(factory);

            var edges = delaunayTri.GetEdges(factory);

            var TriangleLine = edges.Geometries;

            foreach(var l in TriangleLine)
            {
                string lineString = l.ToString();

                string lineResult = lineString.Substring(12);

               string result1= lineResult.Replace("(","" );

               string result2 = result1.Replace(")", "");

               string resultFinal = result2.Replace(",", "" );

                Console.WriteLine(resultFinal);

                fileWriter.WriteLine(resultFinal);

            }
            fileWriter.Close();
            Console.WriteLine("finish writing file");

            //           Console.WriteLine(edges.this[2]);



            //             Console.WriteLine("Triangles: " + edges);



        }
    }
}
